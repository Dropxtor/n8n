#!/bin/bash

# Cr√©√© par [Votre Nom] - Version fix√©e

set -e  # Arr√™te sur erreur

echo "=================================="
echo " _______                                        __                       
|       \                                      |  \                      
| ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì\ ______   ______   ______  __    __ _| ‚ñì‚ñì_    ______   ______  
| ‚ñì‚ñì  | ‚ñì‚ñì/      \ /      \ /      \|  \  /  \   ‚ñì‚ñì \  /      \ /      \ 
| ‚ñì‚ñì  | ‚ñì‚ñì  ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì\  ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì\  ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì\\‚ñì‚ñì\/  ‚ñì‚ñì\‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì |  ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì\  ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì\
| ‚ñì‚ñì  | ‚ñì‚ñì ‚ñì‚ñì   \‚ñì‚ñì ‚ñì‚ñì  | ‚ñì‚ñì ‚ñì‚ñì  | ‚ñì‚ñì >‚ñì‚ñì  ‚ñì‚ñì | ‚ñì‚ñì __| ‚ñì‚ñì  |  ‚ñì‚ñì  ‚ñì‚ñì   \‚ñì‚ñì_   
| ‚ñì‚ñì    ‚ñì‚ñì ‚ñì‚ñì      \‚ñì‚ñì    ‚ñì‚ñì ‚ñì‚ñì    ‚ñì‚ñì  ‚ñì‚ñì ‚ñì‚ñì\  \‚ñì‚ñì  ‚ñì‚ñì\‚ñì‚ñì     ‚ñì‚ñì  ‚ñì‚ñì      
 \‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì \‚ñì‚ñì       \‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì| ‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì \‚ñì‚ñì   \‚ñì‚ñì   \‚ñì‚ñì‚ñì‚ñì  \‚ñì‚ñì‚ñì‚ñì‚ñì‚ñì   ‚ñì‚ñì      
                           | ‚ñì‚ñì                                          
                           | ‚ñì‚ñì                                          
      "
echo "=================================="

echo "üîπ Mise √† jour du syst√®me..."
sudo apt update && sudo apt upgrade -y

echo "üîπ Installation de Docker..."
sudo apt install -y apt-transport-https ca-certificates curl software-properties-common jq  # Ajout de jq pour parser ngrok API
curl -fsSL https://get.docker.com -o get-docker.sh
sudo sh get-docker.sh  # Utilise sudo pour sh
rm get-docker.sh  # Nettoyage
sudo systemctl enable --now docker  # Active et d√©marre Docker
sudo usermod -aG docker "$USER"  # Pour futures sessions sans sudo

echo "üîπ V√©rification de Docker..."
sudo docker --version

echo "üîπ Cr√©ation du volume persistant pour n8n..."
sudo docker volume create n8n_data

echo "üîπ T√©l√©chargement de l'image n8n..."
sudo docker pull n8nio/n8n

echo "üîπ G√©n√©ration d'un mot de passe al√©atoire pour n8n..."
N8N_PASSWORD=$(openssl rand -base64 12)  # Mot de passe s√©curis√©
echo "üîí Mot de passe n8n g√©n√©r√© : $N8N_PASSWORD (notez-le !)"

echo "üîπ Lancement de n8n en background..."
sudo docker run -d --name n8n --restart always -p 5678:5678 \
  -v n8n_data:/home/node/.n8n \
  -e N8N_BASIC_AUTH_ACTIVE=true \
  -e N8N_BASIC_AUTH_USER=admin \
  -e N8N_BASIC_AUTH_PASSWORD="$N8N_PASSWORD" \
  n8nio/n8n

echo "üîπ Installation de ngrok..."
wget -q https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz
tar xvzf ngrok-v3-stable-linux-amd64.tgz
sudo mv ngrok /usr/local/bin/
rm ngrok-v3-stable-linux-amd64.tgz  # Nettoyage

# Interaction s√©curis√©e pour le token ngrok
while true; do
    read -p "üîë Entrez votre token ngrok : " NGROK_TOKEN
    if [ -n "$NGROK_TOKEN" ]; then
        ngrok config add-authtoken "$NGROK_TOKEN"
        break
    else
        echo "‚ö†Ô∏è Token vide, veuillez r√©essayer."
    fi
done

echo "üîπ Lancement du tunnel ngrok en background..."
ngrok http 5678 > ngrok.log 2>&1 &
NGROK_PID=$!
sleep 5  # Attente pour que ngrok d√©marre

# Extraction de l'URL HTTPS via API ngrok
PUBLIC_URL=$(curl -s http://localhost:4040/api/tunnels | jq -r '.tunnels[] | select(.proto == "https") | .public_url')
if [ -z "$PUBLIC_URL" ]; then
    echo "‚ö†Ô∏è Erreur : Impossible d'obtenir l'URL ngrok. V√©rifiez ngrok.log et relancez 'ngrok http 5678' manuellement."
    kill $NGROK_PID
    exit 1
fi

echo "‚úÖ Installation termin√©e ! n8n est en cours d'ex√©cution sur le port 5678."
echo "Acc√©dez √† n8n via l'URL s√©curis√©e : $PUBLIC_URL"
echo "Login : admin / Mot de passe : $N8N_PASSWORD"
echo "Pour arr√™ter n8n : sudo docker stop n8n"
echo "Pour arr√™ter ngrok : kill $NGROK_PID"
echo "Logs n8n : sudo docker logs n8n"
echo "Logs ngrok : cat ngrok.log"
